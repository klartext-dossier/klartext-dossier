name: Build and Publish

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  # pypeline:

  #   name: Publish Pypeline Image
  #   runs-on: ubuntu-latest
    
    # permissions:
    #   packages: write
    #   contents: read
    #   attestations: write
    #   id-token: write
      
    # steps:
    #   - name: Check out the repo
    #     uses: actions/checkout@v4

    #   - name: Log in to Docker Hub
    #     uses: docker/login-action@v3
    #     with:
    #       username: ${{ secrets.DOCKER_USERNAME }}
    #       password: ${{ secrets.DOCKER_PASSWORD }}
          
    #   - name: Extract metadata (tags, labels) for Docker
    #     id: meta
    #     uses: docker/metadata-action@v5
    #     with:
    #       images: klartext/pypeline

    #   - name: Build and push Docker image
    #     id: push
    #     uses: docker/build-push-action@v6
    #     with:
    #       context: pypeline
    #       file: pypeline/Dockerfile
    #       push: True
    #       tags: klartext/pypeline:latest
    #       labels: ${{ steps.meta.outputs.labels }}

#      - name: Generate artifact attestation
#        uses: actions/attest-build-provenance@v2
#        with:
#          subject-name: index.docker.io/klartext/pypeline
#          subject-digest: ${{ steps.push.outputs.digest }}
#          push-to-registry: true

  package:

    # needs: pypeline

    name: Build Distribution Packages

    runs-on: ubuntu-latest
    container: klartext/pypeline:latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Make packages
      run: make

    - name: Publish packages
      uses: actions/upload-artifact@v4
      with:
        name: packages
        path: ./*/dist/*

    - name: Publish test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: ./**/test-reports/*.xml

  # dossier:

  #   needs: package

  #   name: Publish Dossier Image
  #   runs-on: ubuntu-latest
    
  #   permissions:
  #     packages: write
  #     contents: read
  #     attestations: write
  #     id-token: write
      
  #   steps:
  #     - name: Check out the repo
  #       uses: actions/checkout@v4

  #     - name: Log in to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
          
  #     - name: Extract metadata (tags, labels) for Docker
  #       id: meta
  #       uses: docker/metadata-action@v5
  #       with:
  #         images: klartext/dossier

  #     - name: Download build artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: packages
  #         path: docker
  #         merge-multiple: True

  #     - name: Dump
  #       run: ls -lR docker

  #     - name: Build and push Docker image
  #       id: push
  #       uses: docker/build-push-action@v6
  #       with:
  #         context: docker
  #         file: docker/Dockerfile
  #         push: True
  #         tags: klartext/dossier:latest
  #         labels: ${{ steps.meta.outputs.labels }}

#      - name: Generate artifact attestation
#        uses: actions/attest-build-provenance@v2
#        with:
#          subject-name: index.docker.io/klartext/dossier
#          subject-digest: ${{ steps.push.outputs.digest }}
#          push-to-registry: true

  publish-to-testpypi:

    needs: package

    name: Publish to TestPyPi
    # if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes

    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/project/klartext

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:

    - name: Download
      uses: actions/download-artifact@v4
      with:
        name: packages
        path: dist/klartext
    
    - name: Dump
      run: ls -lR dist

    - name: Publish klartext distribution to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1      
      with:
        repository-url: https://test.pypi.org/legacy/
        packages-dir: dist/klartext
        verbose: true