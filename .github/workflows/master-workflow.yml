name: Build and Publish

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:

  pypeline:

    name: Publish Pypeline Image
    
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
      
    steps:

    - name: Check out the repo
      uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: klartext/pypeline

    - name: Install hatch
      run: python -m pip install hatch

    - name: Build klartext-pygments
      run: make -C klartext-pygments

    - name: Publish package
      uses: actions/upload-artifact@v4
      with:
        name: klartext_pygments_package
        path: ./klartext-pygments/dist/*

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: klartext_pygments_package
        path: pypeline
        merge-multiple: True
  
    - name: Dump
      run: ls -lR pypeline

    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@v6
      with:
        context: pypeline
        file: pypeline/Dockerfile
        push: True
        tags: klartext/pypeline:latest
        labels: ${{ steps.meta.outputs.labels }}

#      - name: Generate artifact attestation
#        uses: actions/attest-build-provenance@v2
#        with:
#          subject-name: index.docker.io/klartext/pypeline
#          subject-digest: ${{ steps.push.outputs.digest }}
#          push-to-registry: true

  package:

    name: Build Distribution Packages

    needs: pypeline

    runs-on: ubuntu-latest
    container: klartext/pypeline:latest

    steps:

    - uses: actions/checkout@v4
    
    - name: Make packages
      run: make

    - name: Publish packages
      uses: actions/upload-artifact@v4
      with:
        name: packages
        path: ./*/dist/*

    - name: Publish test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: ./**/test-reports/*.xml

  dossier:

    name: Publish Dossier Image

    needs: package
    
    runs-on: ubuntu-latest
    
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
      
    steps:

    - name: Check out the repo
      uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: klartext/dossier

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: packages
        path: docker
        merge-multiple: True

    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@v6
      with:
        context: docker
        file: docker/Dockerfile
        push: True
        tags: klartext/dossier:latest
        labels: ${{ steps.meta.outputs.labels }}

#      - name: Generate artifact attestation
#        uses: actions/attest-build-provenance@v2
#        with:
#          subject-name: index.docker.io/klartext/dossier
#          subject-digest: ${{ steps.push.outputs.digest }}
#          push-to-registry: true


  publish-to-testpypi:

    name: Publish to TestPyPi
    
    needs: package
    # if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes

    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/project/klartext

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:

    - name: Download
      uses: actions/download-artifact@v4
      with:
        name: packages
        path: dist
    
    - name: Publish klartext distribution to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1      
      with:
        repository-url: https://test.pypi.org/legacy/
        packages-dir: dist/klartext/dist
        verbose: true
        skip-existing: true

    - name: Publish mdx distribution to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1      
      with:
        repository-url: https://test.pypi.org/legacy/
        packages-dir: dist/mdx/dist
        verbose: true
        skip-existing: true

    - name: Publish dossier distribution to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1      
      with:
        repository-url: https://test.pypi.org/legacy/
        packages-dir: dist/dossier/dist
        verbose: true
        skip-existing: true                


  deploy:

    if: False
    
    name: Publish Website to Github Pages

    needs: pypeline

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    container: klartext/dossier:latest

    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Pages
      uses: actions/configure-pages@v5

    - name: Build the website
      run: make website

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: 'docs'

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
